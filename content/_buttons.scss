// ---
// title: Buttons
// description: These are the default button styles.
// ---

// ### Button Row Left

// <div class="example">
//   <div class="lego-button-row--left">
//     <button class="lego-button">Go</button>
//     <button class="lego-button lego-button--brand">Go</button>
//     <button class="lego-button lego-button--highlight">Go</button>
//     <button class="lego-button lego-button--danger">Go</button>
//   </div>
// </div>

// ### Button Row Center

// <div class="example">
//   <div class="lego-button-row--center">
//     <button class="lego-button">Go</button>
//     <button class="lego-button lego-button--brand">Go</button>
//     <button class="lego-button lego-button--highlight">Go</button>
//     <button class="lego-button lego-button--danger">Go</button>
//   </div>
// </div>


// [---]

// ### Button Variables
// Shadows for buttons.

%lego-button,
.lego-button {
  display: inline-block;
  vertical-align: middle;
  white-space: nowrap;
  font-family: inherit;
  font-size: 12px;
  cursor: pointer;
  border: 0;
  margin: 0;
  padding: 0 spacer(1);
  height: map-get($button, height-default);
  font-weight: map-get($font-weight, normal);
  border-radius: map-get($border-radius, base);
  border-style: solid;
  border-width: 1px;
  line-height: 1;

  // ### Button Styles
  // Button color variations.

  background: linear-gradient(#FFF, #EEE);
  color: map-get($font-color, base);
  border-color: map-get($ui-color, base);

  &:hover,
  &:active,
  &:visited,
  &:focus {
    outline: none;
    color: map-get($font-color, base);
  }

  &.lego-button--hover,
  &:hover {
    background: linear-gradient(#FFF, #E5E5E5);
    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
  }

  &.lego-button--active,
  &:active {
    box-shadow: inset 0 1px 4px rgba(0, 0, 0, 0.2);
    border-color: #BBB;
  }

  &:visited,
  &:focus {
    color: map-get($font-color, base);
  }

  &--brand {
    background: linear-gradient(#147CC5, #1270B1);
    border-color: #00558D;
    color: map-get($font-color, white);

    &.lego-button--hover,
    &:hover {
      background: linear-gradient(#038AE6, #1270B1);
    }

    &.lego-button--active,
    &:active {
      box-shadow: inset 0 3px 6px rgba(0, 0, 0, 0.3);
      border-color: #00558D;
    }

    &:hover,
    &:active,
    &:visited,
    &:focus {
      color: map-get($font-color, white);
    }
  }

  &--highlight {
    background: linear-gradient(#A1CD1E, #91B81C);
    border-color: #719505;
    color: map-get($font-color, white);

    &.lego-button--hover,
    &:hover {
      background: linear-gradient(#A3D60C, #91B81C);
    }

    &.lego-button--active,
    &:active {
      box-shadow: inset 0 3px 6px rgba(0, 0, 0, 0.3);
      border-color: #719505;
    }

    &:hover,
    &:active,
    &:visited,
    &:focus {
      color: map-get($font-color, white);
    }
  }

  &--danger {
    background: linear-gradient(#AA280D, #991E04);
    border-color: #641100;
    color: map-get($font-color, white);

    &.lego-button--hover,
    &:hover {
      background: linear-gradient(#C02C0C, #991E04);
    }

    &.lego-button--active,
    &:active {
      box-shadow: inset 0 3px 6px rgba(0, 0, 0, 0.3);
      border-color: #641100;
    }

    &:hover,
    &:active,
    &:visited,
    &:focus {
      color: map-get($font-color, white);
    }
  }

  // ### Button Sizes
  // Button size variations.

  &--small {
    padding: 4px spacer(1);
    height: map-get($button, height-small);
    font-size: 10px;
    line-height: 1;
  }

  &--full {
    width: 100%;
    padding-right: 0;
    padding-left: 0;
    text-align: center;
  }

  // ### Button Shapes
  // Button shape variations.

  &--round {
    border-radius: 50%;
    // Using the same dimension for height and width so that the button is always round
    height: map-get($button, height-small);
    width: map-get($button, height-small);
    padding: 0;

    .lego-icon {
      height: 12px;
      width: 12px;
    }
  }

  // ### With Icon
  // Some extra help is needed to get the icon and text to line up.

  &--icon {
    line-height: 1.4;

    .lego-icon {
      vertical-align: sub;
    }
  }

  // ### Button as Link
  // Styling a button to look like an anchor link.

  &--link {
    @extend %link;
    background: none;
    border: 0;
    padding: 0;
    font-family: map-get($font-family, base);
    cursor: pointer;
    outline: 0;
  }

  // ### Inactive Button
  // Disabled state.

  &[disabled],
  &[disabled]:hover,
  &[disabled]:active,
  &[disabled]:focus,
  &--disabled,
  &--disabled:hover,
  &--disabled:active,
  &--disabled:focus {
    cursor: default;
    box-shadow: none;
    background: #F8F8F8;
    color: map-get($font-color, medium);
    border-color: map-get($ui-color, base);
    opacity: map-get($opacity, medium);

    + .lego-button--brand {
      border-color: #00558D;
      background: #147CC5;
      color: #FFF;
    }

    + .lego-button--highlight {
      border-color: #719505;
      background: #A1CD1E;
      color: #FFF;
    }

    + .lego-button--danger {
      border-color: #641100;
      background: #AA280D;
      color: #FFF;
    }
  }
}

// ### Anchors like Buttons
// Anchors that appear to be buttons.

a.lego-button {
  padding-top: 8px;

  &--small {
    padding-top: 6px;
  }
}
